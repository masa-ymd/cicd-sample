name: Frontend Manual Rollback (Production)

# このワークフローは本番環境のフロントエンド配置物を手動で前のバージョンに戻すためのものです
on:
  workflow_dispatch:
    inputs:
      version_to_rollback:
        description: 'ロールバックするバージョン（例: v1.2.3）'
        required: true
        type: string
      confirm_rollback:
        description: 'ロールバックを実行するには「CONFIRM」と入力してください'
        required: true
        type: string

jobs:
  validate-input:
    runs-on: ubuntu-latest
    steps:
      # 確認入力が正しいかを検証
      - name: 確認入力の検証
        if: github.event.inputs.confirm_rollback != 'CONFIRM'
        run: |
          echo "エラー: ロールバックを実行するには 'CONFIRM' と入力する必要があります"
          exit 1
      
      # バージョン形式を検証
      - name: バージョン形式の検証
        run: |
          if ! [[ ${{ github.event.inputs.version_to_rollback }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "エラー: バージョンはセマンティックバージョニング形式（vX.Y.Z）である必要があります"
            exit 1
          fi
          echo "バージョン検証完了: ${{ github.event.inputs.version_to_rollback }}"

  rollback:
    runs-on: ubuntu-latest
    needs: validate-input
    environment: production
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      # AWS認証情報の設定
      - name: AWS認証情報の設定
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      # 利用可能なバージョンを一覧表示
      - name: 利用可能なバージョンを一覧表示
        run: |
          echo "S3バケット内の利用可能なバージョンを一覧表示します..."
          aws s3 ls s3://cicd-sample-frontend-prod/ --delimiter "/" | grep -v "current/" | grep -v "backup-" | grep "^.*v[0-9]\.[0-9]\.[0-9].*/$" || echo "注意: バージョンフォルダが見つかりませんでした"
      
      # 指定されたバージョンが存在するか確認
      - name: 指定されたバージョンの存在確認
        run: |
          VERSION="${{ github.event.inputs.version_to_rollback }}"
          
          # バージョンディレクトリが存在するか確認
          if aws s3 ls "s3://cicd-sample-frontend-prod/$VERSION/" --delimiter "/" 2>/dev/null; then
            echo "指定されたバージョン $VERSION は存在します"
            echo "VERSION_EXISTS=true" >> $GITHUB_ENV
          else
            echo "警告: 指定されたバージョン $VERSION はS3バケットに存在しません"
            echo "利用可能なバージョンのいずれかを選択してください"
            echo "VERSION_EXISTS=false" >> $GITHUB_ENV
            exit 1
          fi
      
      # バックアップ処理はTerraform前のバックアップステップとして保持
      - name: 現在のcurrentフォルダをバックアップ
        if: env.VERSION_EXISTS == 'true'
        run: |
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          echo "現在のcurrentフォルダの状態をバックアップします: backup-$TIMESTAMP/"
          
          # currentフォルダが存在するか確認
          if aws s3 ls "s3://cicd-sample-frontend-prod/current/" --delimiter "/" 2>/dev/null; then
            # currentフォルダの内容をbackupフォルダにコピー
            aws s3 sync s3://cicd-sample-frontend-prod/current/ s3://cicd-sample-frontend-prod/backup-$TIMESTAMP/ --delete
            echo "backup-$TIMESTAMP/ フォルダにバックアップを作成しました"
          else
            echo "currentフォルダが存在しません。バックアップをスキップします。"
          fi
      
      # Terraformを使用してロールバック実行
      - name: Setup Terraform
        if: env.VERSION_EXISTS == 'true'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        if: env.VERSION_EXISTS == 'true'
        run: |
          cd infrastructure/environments/prod
          terraform init

      - name: Create Terraform Variables File for Rollback
        if: env.VERSION_EXISTS == 'true'
        run: |
          cat > infrastructure/environments/prod/deploy.auto.tfvars << EOF
          frontend_version = "${{ github.event.inputs.version_to_rollback }}"
          # ビルドパスは空のまま（既存のS3内のバージョンを使用）
          frontend_build_path = ""
          EOF

      - name: Execute Rollback with Terraform
        if: env.VERSION_EXISTS == 'true'
        run: |
          cd infrastructure/environments/prod
          terraform apply -auto-approve
      
      # ロールバックの完了サマリー
      - name: ロールバック完了サマリー
        if: env.VERSION_EXISTS == 'true'
        run: |
          echo "✅ フロントエンドのロールバックが完了しました"
          echo "🔄 currentフォルダの内容がバージョン ${{ github.event.inputs.version_to_rollback }} に更新されました"
          echo "🧹 CloudFrontキャッシュがクリアされました" 