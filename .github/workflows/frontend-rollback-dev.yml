name: Frontend Manual Rollback (Development)

# このワークフローは開発環境のフロントエンド配置物を手動で前のバージョンに戻すためのものです
on:
  workflow_dispatch:
    inputs:
      version_to_rollback:
        description: 'ロールバックするバージョン（例: v1.2.3, main-abc123, 日付など）'
        required: true
        type: string
      confirm_rollback:
        description: 'ロールバックを実行するには「CONFIRM」と入力してください'
        required: true
        type: string

jobs:
  validate-input:
    runs-on: ubuntu-latest
    steps:
      # 確認入力が正しいかを検証
      - name: 確認入力の検証
        if: github.event.inputs.confirm_rollback != 'CONFIRM'
        run: |
          echo "エラー: ロールバックを実行するには 'CONFIRM' と入力する必要があります"
          exit 1

  rollback:
    runs-on: ubuntu-latest
    needs: validate-input
    environment: development  # 開発環境に変更
    permissions:
      id-token: write
      contents: read
    
    steps:
      # AWS認証情報の設定
      - name: AWS認証情報の設定
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      # 利用可能なバージョンを一覧表示
      - name: 利用可能なバージョンを一覧表示
        run: |
          echo "S3バケット内の利用可能なバージョンを一覧表示します..."
          aws s3 ls s3://cicd-sample-frontend-dev/ --delimiter "/" || echo "注意: ディレクトリが見つかりませんでした"
      
      # 指定されたバージョンが存在するか確認
      - name: 指定されたバージョンの存在確認
        run: |
          VERSION="${{ github.event.inputs.version_to_rollback }}"
          
          # バージョンディレクトリが存在するか確認
          if aws s3 ls "s3://cicd-sample-frontend-dev/$VERSION/" --delimiter "/" 2>/dev/null; then
            echo "指定されたバージョン $VERSION は存在します"
            echo "VERSION_EXISTS=true" >> $GITHUB_ENV
          else
            echo "警告: 指定されたバージョン $VERSION はS3バケットに存在しません"
            echo "利用可能なバージョンのいずれかを選択してください"
            echo "VERSION_EXISTS=false" >> $GITHUB_ENV
            exit 1
          fi
      
      # S3バケットのデフォルトルートオブジェクトを更新
      - name: ルートオブジェクトの更新
        if: env.VERSION_EXISTS == 'true'
        run: |
          VERSION="${{ github.event.inputs.version_to_rollback }}"
          echo "ルートオブジェクトを更新してバージョン $VERSION にリダイレクトします..."
          
          # index.htmlをコピーして最新のデフォルトバージョンにする
          aws s3 cp "s3://cicd-sample-frontend-dev/$VERSION/index.html" "s3://cicd-sample-frontend-dev/index.html" --metadata-directive REPLACE

          # indexファイルが更新されたことを確認
          echo "ルートインデックスファイルが更新されました"
          
          # バージョン情報をversion.jsonに保存
          echo "{\"version\": \"$VERSION\", \"rollback_date\": \"$(date --iso-8601=seconds)\", \"rollback_by\": \"github-actions\"}" > version.json
          aws s3 cp version.json "s3://cicd-sample-frontend-dev/version.json" --metadata-directive REPLACE
      
      # CloudFrontのキャッシュを無効化
      - name: CloudFrontキャッシュの無効化
        run: |
          echo "CloudFrontキャッシュを無効化しています..."
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
      
      # ロールバックの完了サマリー
      - name: ロールバック完了サマリー
        run: |
          echo "✅ 開発環境フロントエンドのロールバックが完了しました"
          echo "🔄 バージョン ${{ github.event.inputs.version_to_rollback }} にロールバックされました"
          echo "🧹 CloudFrontキャッシュがクリアされました" 