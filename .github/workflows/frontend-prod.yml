name: Frontend Production Workflow

on:
  push:
    branches:
      - production
    paths:
      - 'frontend/**'
  pull_request:
    types: [closed]
    branches:
      - production
    paths:
      - 'frontend/**'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (semantic versioning: vX.Y.Z)'
        required: true
        type: string

jobs:
  validate-version:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Validate semantic version
        run: |
          if ! [[ ${{ github.event.inputs.version }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must follow semantic versioning format (vX.Y.Z)"
            exit 1
          fi
          echo "Version validated: ${{ github.event.inputs.version }}"

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: validate-version
    if: |
      always() && 
      (needs.validate-version.result == 'success' || github.event_name != 'workflow_dispatch') &&
      (github.event_name != 'pull_request' || github.event.pull_request.merged == true)
    environment: production
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm install --legacy-peer-deps

      - name: Run tests
        run: |
          cd frontend
          npm test -- --watchAll=false --passWithNoTests

      - name: Build application
        run: |
          cd frontend
          REACT_APP_API_URL=${{ secrets.API_URL }} npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Tag production deployment
        run: |
          VERSION="${{ github.event.inputs.version || 'latest' }}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Deploying frontend version: $VERSION"

      - name: Deploy to S3
        run: |
          aws s3 sync frontend/build/ s3://cicd-sample-frontend-prod/ --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

      - name: Comment on PR with deployment info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Frontend deployed to production environment.\nCommit: ' + context.sha + '\nVersion: ${{ env.VERSION }}\nURL: ${{ secrets.FRONTEND_URL }}'
            }) 